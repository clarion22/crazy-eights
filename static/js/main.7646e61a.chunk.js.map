{"version":3,"sources":["util/deck_logic.js","store/game.js","assets/croppedcrazyeights.mp4","assets/dice2.jpg","components/Navbar.js","components/Instruction.js","components/Card.js","util/card_logic.js","components/Board.js","App.js","store/store.js","index.js"],"names":["generateDeck","arr","randomIndex","currentIndex","length","Math","floor","random","shuffle","deck","types","index","i","card","value","type","name","push","makeDeck","DEAL_DECK","PLAY_CARD","DEAL_CARD","OPPONENT_PLAY","dealDeck","initialState","player","opponent","activeCard","gameReducer","state","action","playerArr","opponentArr","splice","activeCard1","shift","playedCard","payload","playerCards","Object","values","cards","filter","_","isEqual","updatedDeck","updatedPlayerArr","opponentChosenCard","possibleCards","opponentCards","newCards","deckToUpdate","opponentArrToUpdate","Navbar","className","to","Instruction","autoPlay","muted","loop","src","vid","bounce","keyframes","hoverMixin","css","gradientAnimation","Card","selectCard","selected","gameSession","setType","CardDiv","styled","div","unicode","join","generateUnicode","style","width","onClick","Board","dispatch","useDispatch","useSelector","game","useState","setGameSession","chosenCard","setChosenCard","totalMoves","setTotalMoves","setWinner","message","setMessage","isValidMove","setisValidMove","selectedCard","useRef","current","console","log","makeMove","validMove","setTimeout","opponentPlay","prev","useEffect","map","id","App","enhancer","path","exact","rootReducer","combineReducers","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7646e61a.chunk.js","sourcesContent":["// generates a standard 52 card deck\nconst makeDeck = () => {\n\tconst deck = [];\n\tconst types = ['Hearts', 'Diamonds', 'Clubs', 'Spades'];\n\tlet index = 0;\n\twhile (index < types.length) {\n\t\tfor (let i = 1; i < 14; i++) {\n\t\t\tconst card = { value: 0, type: '', name: '' };\n\t\t\tcard.value = i;\n\t\t\tcard.type = types[index];\n\t\t\tif (i === 1) {\n\t\t\t\tcard.name = 'Ace';\n\t\t\t} else if (i === 11) {\n\t\t\t\tcard.name = 'Jack';\n\t\t\t} else if (i === 12) {\n\t\t\t\tcard.name = 'Queen';\n\t\t\t} else if (i === 13) {\n\t\t\t\tcard.name = 'King';\n\t\t\t} else {\n\t\t\t\tcard.name = i;\n\t\t\t}\n\t\t\tdeck.push(card);\n\t\t}\n\t\tindex++;\n\t}\n\treturn deck;\n};\n\n// shuffles an array\nconst shuffle = (arr) => {\n\tlet currentIndex = arr.length;\n\tlet randomIndex;\n\twhile (currentIndex !== 0) {\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex--;\n\n\t\t// swap elements\n\t\t[arr[currentIndex], arr[randomIndex]] = [\n\t\t\tarr[randomIndex],\n\t\t\tarr[currentIndex],\n\t\t];\n\t}\n\treturn arr;\n};\n\nexport const generateDeck = () => {\n\treturn shuffle(makeDeck());\n};\n\nexport const validMove = (card, activeCard) => {\n\tif (card.type === activeCard.type || card.value === activeCard.value)\n\t\treturn true;\n\treturn false;\n};\n\nexport const movesLeft = (hand, activeCard) => {\n\tif (!hand.length || !activeCard) return false;\n\tlet movesLeft = false;\n\thand.forEach((card) => {\n\t\tif (card.value === activeCard.value || card.type === activeCard.type) {\n\t\t\tmovesLeft = true;\n\t\t}\n\t});\n\treturn movesLeft;\n};\n","import { generateDeck } from '../util/deck_logic';\nimport _ from 'lodash';\n// action types\nconst DEAL_DECK = 'deck/dealDeck';\nconst PLAY_CARD = 'deck/playCard';\nconst DEAL_CARD = 'deck/dealCard';\nconst OPPONENT_PLAY = 'deck/opponentPlay';\n// actions\nexport const dealDeck = () => {\n\treturn {\n\t\ttype: DEAL_DECK,\n\t};\n};\n\nexport const playCard = (payload) => {\n\treturn {\n\t\ttype: PLAY_CARD,\n\t\tpayload,\n\t};\n};\n\nexport const dealCard = () => {\n\treturn {\n\t\ttype: DEAL_CARD,\n\t};\n};\n\nexport const opponentPlay = (payload) => {\n\treturn {\n\t\ttype: OPPONENT_PLAY,\n\t\tpayload,\n\t};\n};\n\nconst initialState = {\n\tdeck: [],\n\tplayer: [],\n\topponent: [],\n\tactiveCard: {},\n};\n\nconst gameReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase DEAL_DECK:\n\t\t\tlet playerArr = [];\n\t\t\tlet opponentArr = [];\n\t\t\tconst deck = generateDeck();\n\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\tplayerArr.push(deck[i]);\n\t\t\t}\n\t\t\tfor (let i = 8; i < 16; i++) {\n\t\t\t\topponentArr.push(deck[i]);\n\t\t\t}\n\t\t\tdeck.splice(0, 16);\n\t\t\tlet activeCard1 = deck[0];\n\t\t\tdeck.shift();\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdeck: deck,\n\t\t\t\tactiveCard: activeCard1,\n\t\t\t\tplayer: playerArr,\n\t\t\t\topponent: opponentArr,\n\t\t\t};\n\t\tcase PLAY_CARD:\n\t\t\tlet playedCard = action.payload;\n\t\t\tlet playerCards = Object.values(state.player);\n\n\t\t\tlet cards = playerCards.filter((card) => {\n\t\t\t\tif (!_.isEqual(card, playedCard)) {\n\t\t\t\t\treturn card;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn { ...state, player: cards, activeCard: playedCard };\n\t\tcase DEAL_CARD:\n\t\t\tlet card = state.deck[0];\n\t\t\tconst updatedDeck = state.deck;\n\t\t\tupdatedDeck.shift();\n\t\t\tlet updatedPlayerArr = state.player;\n\t\t\tupdatedPlayerArr.push(card);\n\t\t\treturn { ...state, deck: updatedDeck, player: updatedPlayerArr };\n\t\tcase OPPONENT_PLAY:\n\t\t\tlet opponentCards = state.opponent;\n\t\t\tlet activeCard = state.activeCard;\n\t\t\tlet newCards = [];\n\t\t\tlet opponentChosenCard;\n\t\t\tlet possibleCards;\n\t\t\tif (activeCard.value !== 8) {\n\t\t\t\tpossibleCards = opponentCards.filter((card) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tcard.type === activeCard.type ||\n\t\t\t\t\t\tcard.value === activeCard.value\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn card;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (activeCard.value === 8) {\n\t\t\t\tlet type = action.payload;\n\t\t\t\tpossibleCards = opponentCards.filter((card) => {\n\t\t\t\t\tif (card.type === type) {\n\t\t\t\t\t\treturn card;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (possibleCards.length === 0) {\n\t\t\t\tlet card = state.deck[0];\n\t\t\t\tlet deckToUpdate = state.deck;\n\t\t\t\tdeckToUpdate.shift();\n\t\t\t\tlet opponentArrToUpdate = state.opponent;\n\t\t\t\topponentArrToUpdate.push(card);\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tdeck: deckToUpdate,\n\t\t\t\t\topponent: opponentArrToUpdate,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\topponentChosenCard = possibleCards[0];\n\t\t\t\tnewCards = opponentCards.filter((card) => {\n\t\t\t\t\tif (!_.isEqual(card, opponentChosenCard)) {\n\t\t\t\t\t\treturn card;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactiveCard: opponentChosenCard,\n\t\t\t\topponent: newCards,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default gameReducer;\n","export default __webpack_public_path__ + \"static/media/croppedcrazyeights.86cdf0ee.mp4\";","export default __webpack_public_path__ + \"static/media/dice2.8bd78625.jpg\";","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport './styles/nav.css';\n\nfunction Navbar() {\n\treturn (\n\t\t<div className='navbar'>\n\t\t\t<NavLink to='/crazy-eights' className='navbar--home'>\n\t\t\t\tCrazy Eights\n\t\t\t</NavLink>\n\t\t</div>\n\t);\n}\n\nexport default Navbar;\n","import React from 'react';\nimport vid from '../assets/croppedcrazyeights.mp4';\nimport dice from '../assets/dice2.jpg';\nimport './styles/board.css';\nimport Navbar from './Navbar';\n\nfunction Instruction() {\n\treturn (\n\t\t<div>\n\t\t\t<div className='main_wrapper'>\n\t\t\t\t<span>Crazy Eights</span>\n\t\t\t</div>\n\t\t\t<div className='main_cotainer--rules'>\n\t\t\t\t<h1>Rules of Crazy Eights</h1>\n\t\t\t\t<h2>Object of the game</h2>\n\t\t\t\t<span>\n\t\t\t\t\tThe goal is to be the first player to get rid of all the\n\t\t\t\t\tcards in your hand\n\t\t\t\t</span>\n\t\t\t\t<ol type='1'>\n\t\t\t\t\t<li>You can play any card of the same suit or rank</li>\n\t\t\t\t\t<li>Select a card and press play to make a move</li>\n\t\t\t\t\t<li>Click draw card if you don't have a card to play</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tIf you choose an 8, you can set the next suit of the\n\t\t\t\t\t\topponent\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t</div>\n\t\t\t<video autoPlay muted loop>\n\t\t\t\t<source src={vid} type='video/mp4' />\n\t\t\t\tYour browser does not support the video tag.\n\t\t\t</video>\n\t\t</div>\n\t);\n}\n\nexport default Instruction;\n","import React, { useEffect, CSSProperties, useState } from 'react';\nimport './styles/board.css';\nimport styled, { keyframes, css } from 'styled-components';\nimport { generateUnicode } from '../util/card_logic';\n\nconst bounce = keyframes`\n\t0%   { transform: translateY(0); }\n\t30%  { transform: translateY(-20px); }\n\t50%  { transform: translateY(20px); }\n\t100% { transform: translateY(0); }\n`;\n\nconst shine = keyframes`\n\tto {\n\t\tbackground-position: 200% center;\n\t}\n`;\n\nconst hoverMixin = css`\n\theight: 200px;\n\tbackground: #e4e4e4;\n\tanimation: ${bounce} 1s linear infinite;\n\tmargin: 0;\n\tcursor: pointer;\n\t-webkit-box-shadow: 14px 15px 15px -2px rgba(0, 0, 0, 0.66);\n\tbox-shadow: 14px 15px 15px -2px rgba(0, 0, 0, 0.66);\n`;\n\nconst gradientAnimation = css`\n\ttext-align: center;\n\tbackground: linear-gradient(\n\t\tto right,\n\t\t#fff 20%,\n\t\t#fb00ff 40%,\n\t\t#00ffdc 60%,\n\t\t#fff 80%\n\t);\n\tbackground-size: 200% auto;\n\tcolor: #000;\n\tbackground-clip: text;\n\ttext-fill-color: transparent;\n\t-webkit-background-clip: text;\n\t-webkit-text-fill-color: transparent;\n\tanimation: shine 1.5s linear infinite;\n`;\n\nfunction Card({\n\tcard,\n\tselectCard,\n\tselected,\n\tgameSession,\n\tplayer,\n\tactiveCard,\n\tsetType,\n}) {\n\tif (!card) return null;\n\n\tconst CardDiv = styled.div`\n\t\theight: 200px;\n\t\tpadding-top: 10px;\n\t\tbackground-color: ${selected ? 'black' : 'white'};\n\t\twidth: 148px;\n\t\tmargin: 10px 10px;\n\t\ttransform: ${selected ? 'translateY(-20px)' : ''};\n\t\t&:after {\n\t\t\tcontent: ${generateUnicode(card)};\n\t\t\tfont-size: 14.5em;\n\t\t\tline-height: 0.7;\n\t\t\t${selected\n\t\t\t\t? gradientAnimation\n\t\t\t\t: `color: ${\n\t\t\t\t\t\tcard.type === 'Diamonds' || card.type === 'Hearts'\n\t\t\t\t\t\t\t? 'red'\n\t\t\t\t\t\t\t: 'black'\n\t\t\t\t  }`}\n\t\t}\n\t\t&:hover {\n\t\t\t${selected || activeCard ? '' : hoverMixin}\n\t\t}\n\t\t&:active {\n\t\t\tbackground-color: pink;\n\t\t}\n\t`;\n\n\tif (gameSession && player) {\n\t\treturn (\n\t\t\t<div style={{ width: '100px' }} onClick={() => selectCard(card)}>\n\t\t\t\t{card.value === 8 && selected ? (\n\t\t\t\t\t<div className='card_typepicker'>\n\t\t\t\t\t\t<span onClick={() => setType('Spades')}>♠</span>\n\t\t\t\t\t\t<span onClick={() => setType('Diamonds')}>♦</span>\n\t\t\t\t\t\t<span onClick={() => setType('Hearts')}>♥</span>\n\t\t\t\t\t\t<span onClick={() => setType('Clubs')}>♣</span>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t\t<CardDiv></CardDiv>\n\t\t\t</div>\n\t\t);\n\t} else if (gameSession && !player && !activeCard) {\n\t\treturn (\n\t\t\t<div style={{ width: '100px' }}>\n\t\t\t\t<div className='card'></div>\n\t\t\t</div>\n\t\t);\n\t} else if (gameSession && activeCard) {\n\t\treturn (\n\t\t\t<div style={{ width: '100px' }}>\n\t\t\t\t<CardDiv></CardDiv>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn <></>;\n\t}\n}\n\nexport default Card;\n","export const generateUnicode = (card) => {\n\tlet unicode = ['', '', \"'\"];\n\tif (card) {\n\t\tswitch (card.type) {\n\t\t\tcase 'Spades':\n\t\t\t\tunicode[0] = 'A';\n\t\t\t\tbreak;\n\t\t\tcase 'Hearts':\n\t\t\t\tunicode[0] = 'B';\n\t\t\t\tbreak;\n\t\t\tcase 'Diamonds':\n\t\t\t\tunicode[0] = 'C';\n\t\t\t\tbreak;\n\t\t\tcase 'Clubs':\n\t\t\t\tunicode[0] = 'D';\n\t\t\t\tbreak;\n\t\t}\n\t\tswitch (true) {\n\t\t\tcase card.value > 0 && card.value < 10:\n\t\t\t\tunicode[1] = card.value;\n\t\t\t\tbreak;\n\t\t\tcase card.value === 10:\n\t\t\t\tunicode[1] = 'A';\n\t\t\t\tbreak;\n\t\t\tcase card.value === 11:\n\t\t\t\tunicode[1] = 'B';\n\t\t\t\tbreak;\n\t\t\tcase card.value === 12:\n\t\t\t\tunicode[1] = 'D';\n\t\t\t\tbreak;\n\t\t\tcase card.value === 13:\n\t\t\t\tunicode[1] = 'E';\n\t\t\t\tbreak;\n\t\t}\n\t\treturn \"'\\\\1F0\" + unicode.join('');\n\t}\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { dealDeck, dealCard, playCard, opponentPlay } from '../store/game';\nimport { validMove, movesLeft } from '../util/deck_logic';\nimport Instruction from './Instruction';\nimport Card from './Card';\nimport _ from 'lodash';\nimport './styles/board.css';\n\nfunction Board() {\n\tconst dispatch = useDispatch();\n\tconst player = useSelector((state) => state.game.player);\n\tconst opponent = useSelector((state) => state.game.opponent);\n\tconst deck = useSelector((state) => state.game.deck);\n\tconst activeCard = useSelector((state) => state.game.activeCard);\n\n\tconst [gameSession, setGameSession] = useState(false);\n\tconst [chosenCard, setChosenCard] = useState({});\n\tconst [totalMoves, setTotalMoves] = useState(0);\n\tconst [type, setType] = useState('');\n\tconst [winner, setWinner] = useState(false);\n\tconst [message, setMessage] = useState('');\n\tconst [isValidMove, setisValidMove] = useState(false);\n\n\tconst selectedCard = useRef({ name: '', value: 0, type: '' });\n\n\tconst beginGame = () => {\n\t\tsetGameSession(true);\n\t\tdispatch(dealDeck());\n\t};\n\n\tconst giveCard = () => {\n\t\tdispatch(dealCard());\n\t\tsetTotalMoves((prev) => prev + 1);\n\t};\n\n\tconst selectCard = (card) => {\n\t\tselectedCard.current = card;\n\t\tsetChosenCard(card);\n\t\tconsole.log('currentCard', selectedCard.current);\n\t};\n\n\tconst makeMove = (card) => {\n\t\tif (validMove(card, activeCard)) {\n\t\t\tdispatch(playCard(card));\n\t\t\tsetTimeout(() => {\n\t\t\t\tdispatch(\n\t\t\t\t\topponentPlay(\n\t\t\t\t\t\tcard.value === 8 && type.length === 0 ? card.type : type\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsetTotalMoves((prev) => prev + 1);\n\t\t\t}, 1000);\n\t\t\tselectedCard.current = '';\n\t\t\tsetType('');\n\t\t} else {\n\t\t\tsetisValidMove(true);\n\t\t\tsetTimeout(() => setisValidMove(false), 3000);\n\t\t}\n\t};\n\n\tconst checkWin = () => {\n\t\tif (gameSession) {\n\t\t\tif (player.length === 0) {\n\t\t\t\tsetWinner(true);\n\t\t\t\tsetMessage('CONGRATS YOU WON THE GAME');\n\t\t\t}\n\t\t\tif (deck.length === 0) {\n\t\t\t\tsetWinner(true);\n\t\t\t\tsetMessage('SORRY THE DECK IS');\n\t\t\t}\n\t\t\tif (opponent.length === 0) {\n\t\t\t\tsetWinner(true);\n\t\t\t\tsetMessage('YOU LOSE');\n\t\t\t}\n\t\t}\n\t};\n\n\tconst restartGame = () => {\n\t\tsetTotalMoves(0);\n\t\tsetMessage('');\n\t\tsetWinner(false);\n\t\tdispatch(dealDeck());\n\t};\n\n\tuseEffect(() => {\n\t\tconsole.log('player', player);\n\t\tcheckWin();\n\t}, [totalMoves]);\n\n\tuseEffect(() => {\n\t\tbeginGame();\n\t}, []);\n\n\treturn (\n\t\t<div className='board_wrapper'>\n\t\t\t<div className='deck_wrapper'>\n\t\t\t\t<div className='deck_content_wrapper'>\n\t\t\t\t\t{opponent.map((card, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tcard={card}\n\t\t\t\t\t\t\t\tselectCard={selectCard}\n\t\t\t\t\t\t\t\tselected={false}\n\t\t\t\t\t\t\t\tgameSession={gameSession}\n\t\t\t\t\t\t\t\tplayer={false}\n\t\t\t\t\t\t\t\tactiveCard={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='board_activecard'>\n\t\t\t\t<div className='deck_middle_wrapper'>\n\t\t\t\t\t<div className='board_btnwrapper'>\n\t\t\t\t\t\t<button className='board_btn' onClick={giveCard}>\n\t\t\t\t\t\t\tDraw Card\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName='board_btn'\n\t\t\t\t\t\t\tonClick={() => makeMove(selectedCard.current)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPlay Card\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div id='restart_btn'>\n\t\t\t\t\t\t\t<button className='board_btn' onClick={restartGame}>\n\t\t\t\t\t\t\t\tRestart\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{isValidMove ? (\n\t\t\t\t\t\t\t<div className='board_heading'>\n\t\t\t\t\t\t\t\t<span>NOT A VALID MOVE</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className='board_message'>{message}</div>\n\t\t\t\t\t\t{type ? (\n\t\t\t\t\t\t\t<div className='board_message--type'>\n\t\t\t\t\t\t\t\tYOU CHOSE TYPE: {type}{' '}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tid='deck_displayed'\n\t\t\t\t\t\tclassName={deck.length || !gameSession ? '' : 'hidden'}\n\t\t\t\t\t></div>\n\t\t\t\t\t<Card\n\t\t\t\t\t\tcard={activeCard}\n\t\t\t\t\t\tgameSession={gameSession}\n\t\t\t\t\t\tplayer={false}\n\t\t\t\t\t\tactiveCard={true}\n\t\t\t\t\t/>\n\t\t\t\t\t<p className='ace'></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='deck_wrapper'>\n\t\t\t\t<div className='deck_content_wrapper'>\n\t\t\t\t\t{player.map((card, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tcard={card}\n\t\t\t\t\t\t\t\tselectCard={selectCard}\n\t\t\t\t\t\t\t\tselected={_.isEqual(card, chosenCard)}\n\t\t\t\t\t\t\t\tgameSession={gameSession}\n\t\t\t\t\t\t\t\tplayer={true}\n\t\t\t\t\t\t\t\tactiveCard={false}\n\t\t\t\t\t\t\t\tsetType={setType}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* <Instruction /> */}\n\t\t</div>\n\t);\n}\n\nexport default Board;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { dealDeck, playCard, dealCard, opponentPlay } from './store/game';\nimport { validMove, movesLeft } from './util/deck_logic';\n\nimport Board from './components/Board';\nimport Instruction from './components/Instruction';\nimport Navbar from './components/Navbar';\n\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Navbar />\n\t\t\t<Switch>\n\t\t\t\t<Route path='/crazy-eights' exact={true}>\n\t\t\t\t\t<div className='App'>\n\t\t\t\t\t\t<Board />\n\t\t\t\t\t</div>\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/tutorial'>\n\t\t\t\t\t<div className='App'>\n\t\t\t\t\t\t<Instruction />\n\t\t\t\t\t</div>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware, compose } from '@reduxjs/toolkit';\nimport thunk from \"redux-thunk\";\nimport gameReducer from './game';\nlet enhancer;\n\nconst rootReducer = combineReducers({\n  game: gameReducer,\n});\n\nif (process.env.NODE_ENV === \"production\") {\n  // in production enhancer should only apply thunk middleware\n  enhancer = applyMiddleware(thunk);\n} else {\n  // in development we use redux dev tools and middleware\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n  // if REDUX DEVTOOLS fails, use compose. apply thunk and logger\n  // as middleware to enhancer\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'normalize.css';\nimport App from './App';\nimport configureStore from './store/store';\nimport { Provider } from 'react-redux';\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== 'production') {\n\twindow.store = store;\n\t// window.sessionActions = sessionActions;\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}